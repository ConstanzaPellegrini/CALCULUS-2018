
package Calculus;

import Controlador.Controlador;

import java.awt.event.ActionEvent;

import java.awt.event.KeyEvent;

import java.util.Observable;
import java.util.Observer;

import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author Dario
 */
public class Ventana extends javax.swing.JFrame implements Observer, IVista{
    private Controlador controlador;
    /** Creates new form Ventana */
    public Ventana() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {//GEN-BEGIN:initComponents

        jButton1 = new javax.swing.JButton();
        instrucJP = new javax.swing.JPanel();
        instNames = new javax.swing.JPanel();
        outPutMode = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        comandsNames = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        examples = new javax.swing.JPanel();
        examplesTA = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        comandsJP = new javax.swing.JPanel();
        ingresoComn = new javax.swing.JPanel();
        ingresoCmnd = new javax.swing.JTextField();
        ejecutar = new javax.swing.JButton();
        salidas = new javax.swing.JPanel();
        ingresos = new javax.swing.JScrollPane();
        ingJTA = new javax.swing.JTextArea();
        muestras = new javax.swing.JScrollPane();
        JTImprimir = new javax.swing.JTextArea();

        jButton1.setText("jButton1");
        jButton1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Calculus");
        setFont(new java.awt.Font("Agency FB", 3, 12)); // NOI18N
        getContentPane().setLayout(new java.awt.GridLayout(1, 2));

        instrucJP.setLayout(new java.awt.GridLayout(2, 1));

        instNames.setLayout(new java.awt.GridLayout(1, 2));

        outPutMode.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Modo Output", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N
        outPutMode.setToolTipText("");

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("<p> = imprime por pantalla\n\n<a> = guaerda en archivo\n\n<pa> = imprime por pantalla y guarda en archivo");
        outPutMode.setViewportView(jTextArea1);

        instNames.add(outPutMode);

        comandsNames.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Comandos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jTextArea2.setText("<det> = calcula el determinante\n\n<suma> = suma dos matrices de igual dimension\n\n<resta> = resta dos matrices de igual dimension\n\n<mult> = multiplica dos matrices\n\n<trasp>  = calcula la traspuesta");
        comandsNames.setViewportView(jTextArea2);

        instNames.add(comandsNames);

        instrucJP.add(instNames);

        examples.setLayout(new java.awt.GridLayout(1, 1));

        examplesTA.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Ejemplos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jTextArea3.setEditable(false);
        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jTextArea3.setText("suma A B p = calcula la suma de A y B y la muestra por pantalla\n\nresta A B C pa = calcula la resta de A y B, la muestra por pantalla y la guarda en un archivo\n\ndet A B a = calcula el determinante de A y lo guarda en un archivo\n\ntrasp A p = calcula la traspuesta de A y la muestra por pantalla");
        examplesTA.setViewportView(jTextArea3);

        examples.add(examplesTA);

        instrucJP.add(examples);

        getContentPane().add(instrucJP);

        comandsJP.setLayout(new java.awt.BorderLayout());

        ingresoComn.setLayout(new java.awt.BorderLayout());

        ingresoCmnd.setText("Ingrese...");
        ingresoCmnd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ingresoCmndMouseClicked(evt);
            }
        });
        ingresoCmnd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingresoCmndActionPerformed(evt);
            }
        });
        ingresoCmnd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ingresoCmndKeyPressed(evt);
            }
        });
        ingresoComn.add(ingresoCmnd, java.awt.BorderLayout.CENTER);

        ejecutar.setText("Ejecutar");
        ejecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ejecutarActionPerformed(evt);
            }
        });
        ingresoComn.add(ejecutar, java.awt.BorderLayout.LINE_END);

        comandsJP.add(ingresoComn, java.awt.BorderLayout.SOUTH);

        salidas.setLayout(new java.awt.GridLayout(1, 2));

        ingresos.setBorder(javax.swing.BorderFactory.createTitledBorder("Comandos"));

        ingJTA.setColumns(20);
        ingJTA.setRows(5);
        ingresos.setViewportView(ingJTA);

        salidas.add(ingresos);

        muestras.setBorder(javax.swing.BorderFactory.createTitledBorder("Salidas"));

        JTImprimir.setColumns(20);
        JTImprimir.setRows(5);
        muestras.setViewportView(JTImprimir);

        salidas.add(muestras);

        comandsJP.add(salidas, java.awt.BorderLayout.CENTER);

        getContentPane().add(comandsJP);

        pack();
    }//GEN-END:initComponents

    private void ingresoCmndMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ingresoCmndMouseClicked
        // TODO add your handling code here:
        this.ingresoCmnd.setText("");
    }//GEN-LAST:event_ingresoCmndMouseClicked

    private void ingresoCmndActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingresoCmndActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_ingresoCmndActionPerformed

    private void ejecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ejecutarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ejecutarActionPerformed

    private void ingresoCmndKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresoCmndKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){
            this.agregaInstruccion(this.ingresoCmnd.getText());
        }
    }//GEN-LAST:event_ingresoCmndKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing
                                                                   .UIManager
                                                                   .getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing
                         .UIManager
                         .setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util
                .logging
                .Logger
                .getLogger(Ventana.class.getName())
                .log(java.util
                         .logging
                         .Level
                         .SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util
                .logging
                .Logger
                .getLogger(Ventana.class.getName())
                .log(java.util
                         .logging
                         .Level
                         .SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util
                .logging
                .Logger
                .getLogger(Ventana.class.getName())
                .log(java.util
                         .logging
                         .Level
                         .SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util
                .logging
                .Logger
                .getLogger(Ventana.class.getName())
                .log(java.util
                         .logging
                         .Level
                         .SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt
            .EventQueue
            .invokeLater(new Runnable() {
                public void run() {
                    new Ventana().setVisible(true);
                }
            });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea JTImprimir;
    private javax.swing.JPanel comandsJP;
    private javax.swing.JScrollPane comandsNames;
    private javax.swing.JButton ejecutar;
    private javax.swing.JPanel examples;
    private javax.swing.JScrollPane examplesTA;
    private javax.swing.JTextArea ingJTA;
    private javax.swing.JTextField ingresoCmnd;
    private javax.swing.JPanel ingresoComn;
    private javax.swing.JScrollPane ingresos;
    private javax.swing.JPanel instNames;
    private javax.swing.JPanel instrucJP;
    private javax.swing.JButton jButton1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JScrollPane muestras;
    private javax.swing.JScrollPane outPutMode;
    private javax.swing.JPanel salidas;
    // End of variables declaration//GEN-END:variables

 
////////////////////////////////////////////////////////////////////////////////GETTERS

    @Override
    public JTextField getIngresoCmnd() {
        return ingresoCmnd;
    }
    @Override
    public JButton getEjecutar() {
        return ejecutar;
    }
//////////////////////////////////////////////////////////////////////////////////////////
    
    @Override
    public void comenzar()
    {
        pack(); // coloca los componentes
        setLocationRelativeTo(null); // centra la ventana en la pantalla
        setVisible(true); // visualiza la ventana
    }
    @Override
    public void update(Observable o, Object arg) {
        // TODO Implement this method

    }
  @Override
    public void setControlador(Controlador controlador){
        this.ejecutar.addActionListener(controlador);
        this.ingresoCmnd.addActionListener(controlador);
        this.ejecutar.addActionListener(controlador);
    }
    

    @Override
    public boolean esIngresoCmnd(ActionEvent e){
        return e.getSource() == this.getIngresoCmnd();
    }
    @Override
    public boolean esJBEjecutar(ActionEvent e) {
        
        return e.getSource() == this.getEjecutar();
    }
    @Override
    public String getInstruccion(){
        return this.getIngresoCmnd().getText();
    }
    @Override
    public void agregaInstruccion(String instruccion){
        this.ingJTA.append(instruccion);
        this.ingJTA.append("\n");
        this.ingresos.repaint();
    }

    @Override
    public void imprimirMatriz(String muestra) {
        this.JTImprimir.append(muestra+"\n");
        this.JTImprimir.repaint();
    }
    @Override
    public void muestraError(String mensaje){
        JOptionPane.showMessageDialog(this, mensaje);
    }
    
    @Override
    public void limpiarSalida(){
        this.JTImprimir.setText("");
        this.JTImprimir.repaint();
    }
    
    @Override
    public void limpiarPantalla(){
        this.ingJTA.setText("");
        this.ingJTA.repaint();
    }
}
